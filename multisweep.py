####  for N77 stageimport hp816x_instrreload(hp816x_instr)#import hp816x_N77Det_instr#reload(hp816x_N77Det_instr)from ctypes import *import matplotlib.pyplot as plt#import  KeithleyClass#reload(KeithleyClass)#from Ke26XXA import Ke26XXAimport visa import numpy as npfrom scipy.io import savematimport time#%% regular laserlaser = hp816x_instr.hp816x();laser.connect('GPIB0::20::INSTR', reset=0, forceTrans=1)#rm = visa.ResourceManager()time.sleep(6.0)#%% laser with N77 detector#laser = hp816x_N77Det_instr.hp816x_N77Det();#laser.connect('GPIB0::20::INSTR',  'USB0::0x0957::0x3718::MY48102149::INSTR', reset=0, forceTrans=1)c = 299792458laser.setTLSState('on');  # turn on laser#laser.setPWMPowerUnit(1, 0, 'dBm')#laser.setPWMPowerUnit(2, 0, 'dBm')#laser.setPWMPowerUnit(3, 0, 'dBm')#laser.setPWMPowerUnit(4, 0, 'dBm')#%% Keythely#kclass = Ke26XXA();#kclass.connect('GPIB0::25::INSTR');#%% base forlder, ex: baseFolder = 'C:/Users/Admin/Desktop/Edison/'# baseFolder = 'C:/Users/eric1/Google Drive/UBC/CBR/Vinny COVID Project/Dec9Trial2/'baseFolder = 'C:/Users/MapleLeafStage/Documents/Dec16Trial/'#%% perform a first scanlambda0 = 1540e-9;lambda_range = 15e-9;# Initialize sweep laserlaser.sweepNumScans = 1;laser.sweepStepWvl = 1e-11;laser.sweepStartWvl = lambda0 - lambda_range;laser.sweepStopWvl = lambda0 + lambda_range;laser.sweepSpeed = '5nm';laser.sweepLaserOutput = 'highpower';laser.sweepPower = 0;laser.sweepInitialRange = -20# sweep laser(wavelength, power) = laser.sweep();# Change power units to dBm after sweeplaser.setAutorangeAll()laser.setTLSWavelength = 1546e-9;#%% save a mat fileFilename = 'laser_sweep_first'power_chan1 = power[:, 0]power_chan2 = power[:, 1]#power_chan3 = power[:, 2]#power_chan4 = power[:, 3]# Save a .mat file containing the datamatDict = dict()matDict['wavelength'] = wavelengthmatDict['power1'] = power_chan1matDict['power2'] = power_chan2# savemat(baseFolder+Filename+'.mat', matDict)# Save a .pdf graph of the dataplt.figure()plt.plot(wavelength*1e9,power_chan1)plt.plot(wavelength*1e9,power_chan2,'r')#plt.plot(wavelength*1e9,power_chan3,'g')#plt.plot(wavelength*1e9,power_chan4,'k') plt.xlabel('Wavelength (nm)')plt.ylabel('Power (dBm)')plt.legend()# plt.savefig(baseFolder+Filename+'.pdf')plt.show()    #%% perform multiple scansnbscan=3500;lambda0 = 1540e-9;lambda_range = 10e-9;# Initialize sweep laserlaser.sweepNumScans = 1;laser.sweepStepWvl = 1e-11;laser.sweepStartWvl = lambda0 - lambda_range;laser.sweepStopWvl = lambda0 + lambda_range;laser.sweepSpeed = '5nm';laser.sweepLaserOutput = 'highpower';laser.sweepPower = 0;laser.sweepInitialRange = -10for i in range(1,nbscan+1):    # sweep laser    (wavelength, power) = laser.sweep();    power_chan1 = power[:, 0]    power_chan2 = power[:, 1]    #power_chan3 = power[:, 2]    #power_chan4 = power[:, 3]    matDict = dict();    matDict['wavelength'] = wavelength;    # matDict['power'] = power[:, 0];    matDict['power1'] = power_chan1    matDict['power2'] = power_chan2        matFilename = 'laser_sweep_%d.mat' %i;    savemat(baseFolder+matFilename, matDict);   # Change power units to dBm after sweeplaser.setAutorangeAll()laser.setTLSWavelength = 1550e-9;#%%  Debugdetpower = laser.readPWM(1, 0);print "detector power is" + str(detpower) laser.disconnect();